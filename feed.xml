<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ikageso.log</title>
  <subtitle>ECL</subtitle>
  <id>http://ecl.info.kindai.ac.jp/blog</id>
  <link href="http://ecl.info.kindai.ac.jp/blog"/>
  <link href="http://ecl.info.kindai.ac.jp/feed.xml" rel="self"/>
  <updated>2015-11-26T21:59:00Z</updated>
  <author>
    <name>ikageso</name>
  </author>
  <entry>
    <title>cpコマンドを用いたlinuxバックアップの作成</title>
    <link rel="alternate" href="http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/11/27/make_backup_for_linux.html"/>
    <id>http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/11/27/make_backup_for_linux.html</id>
    <published>2015-11-26T21:59:00Z</published>
    <updated>2015-11-27T07:31:52+09:00</updated>
    <author>
      <name>ikageso</name>
    </author>
    <content type="html">&lt;h1 id="背景"&gt;背景&lt;/h1&gt;

&lt;h1 id="手法"&gt;手法&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;ファイルタイプを調べる

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;parted -l&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;デバイスをマウントする

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mount -t ファイルタイプ /dev/マウント元 /mnt/マウント先&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ホスト名を調べる

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat /mnt/バックアップ元/etc/hostname&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;バックアップ先のディレクトリを作る

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mkdir /mnt/バックアップ先/ホスト名_backup&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;バックアップする

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;
cp -r /mnt/バックアップ元/home /mnt/バックアップ元/var&lt;/code&gt;
&lt;code&gt;/mnt/バックアップ先/ホスト名_backup&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;(apacheの設定ファイルもバックアップしておくと、何に使われていたのか参考になるかも)

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;
mkdir /mnt/バックアップ先/ホスト名_backup/apache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;
cp /mnt/バックアップ元/etc/apache2/site-available/*&lt;/code&gt; &lt;code&gt;/mnt/バックアップ先/ホスト名_backup/apache/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>ラーメン店"にぼ次郎"におけるヒューリスティック評価</title>
    <link rel="alternate" href="http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/11/26/ramen_nbzr.html"/>
    <id>http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/11/26/ramen_nbzr.html</id>
    <published>2015-11-26T12:50:00Z</published>
    <updated>2015-11-27T12:19:34+09:00</updated>
    <author>
      <name>ikageso</name>
    </author>
    <content type="html">&lt;h1 id="背景"&gt;背景&lt;/h1&gt;

&lt;p&gt;近畿大学の近くには多くの飲食店が存在します。
結構な頻度で入れ替わり、いつもぼーっとしている僕なんかは
行こうと思っていても気づいたら閉店や移転しているといった目に度々会います。&lt;/p&gt;

&lt;p&gt;特にラーメン店の数は多く、にぼ次郎も数あるラーメン店の一つとして11月9日よりオープンしたお店です。
このにぼ次郎、ラーメン麦笑とのコラボということで1カ月間限定であり、開店当初は毎日、好奇心旺盛な近大生の行列。
基本的に新規開店したラーメン屋さんは一度は味を見てみたいと考えている僕は、
並ぶ人の行列がなくなった頃に行ってみようと思ってました。&lt;/p&gt;

&lt;p&gt;しかし、光陰矢の如しと言うように時が経つのは早く、気がついたら11月もそろそろ終わり。
宿泊するために、どこかで夕食を取ろうとしたときに、にぼ次郎の前を通り過ぎました。&lt;/p&gt;

&lt;p&gt;「あ、にぼ次郎行ってない」&lt;/p&gt;

&lt;p&gt;そうです、にぼ次郎に行こうと思っていたけど、今日の今日まですっかり頭の中から抜け落ちていたのでした。
おそらく、この機会を逃すと忘れっぽい僕のことですから、かなりの確率で今後も行くことは無くなってしまうと思います。&lt;/p&gt;

&lt;p&gt;財布の心配とにぼ次郎への好奇心を天秤にかけた結果、
僕はてくてくと店の中に入って行きました。&lt;/p&gt;

&lt;h1 id="評価"&gt;評価&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;時間:25分くらい&lt;/li&gt;
&lt;li&gt;にぼし&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ubuntuにおけるシングルユーザモードを利用したrootパスワード変更方法</title>
    <link rel="alternate" href="http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/11/25/single_user_mode.html"/>
    <id>http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/11/25/single_user_mode.html</id>
    <published>2015-11-25T11:00:00Z</published>
    <updated>2015-11-26T13:30:00+09:00</updated>
    <author>
      <name>ikageso</name>
    </author>
    <content type="html">&lt;h1 id="背景"&gt;背景&lt;/h1&gt;

&lt;p&gt;研究室内で、HDDの再利用が始まりました。
しかし、このHDDの中身を見ることができないものが多くあり、特にあるubuntuが入ったHDDはmountがエラーでできない、HDDを刺してブートしても、ユーザ名不明かつパスワード不明でバックアップが難しい状況にありました。&lt;/p&gt;

&lt;p&gt;そこで、このubuntuのバックアップを取るための方法として、GRUBのシングルユーザーモードを使用し、rootパスワードを再設定することで中に入れるようにしたいと思います。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>test</title>
    <link rel="alternate" href="http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/11/22/test.html"/>
    <id>http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/11/22/test.html</id>
    <published>2015-11-22T13:43:00Z</published>
    <updated>2015-11-22T22:43:12+09:00</updated>
    <author>
      <name>ikageso</name>
    </author>
    <content type="html"></content>
  </entry>
  <entry>
    <title>Middlemanにおけるgitを使用したブログの更新方法</title>
    <link rel="alternate" href="http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/11/21/blog_update_with_git.html"/>
    <id>http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/11/21/blog_update_with_git.html</id>
    <published>2015-11-21T08:13:00Z</published>
    <updated>2015-11-27T15:26:57+09:00</updated>
    <author>
      <name>ikageso</name>
    </author>
    <content type="html">&lt;h1 id="背景"&gt;背景&lt;/h1&gt;

&lt;p&gt;研究室のゼミで卒研ゼミの内容をブログに書くという課題があります。
しかし、このブログの更新の際に、研究室の同期や後輩に聞くと、意外とscpで全部上げる人が多いようです。&lt;/p&gt;

&lt;p&gt;せっかくなんで、middlemanで、gitを使ってブログを更新する方法を紹介したいと思います。&lt;/p&gt;

&lt;h1 id="手法"&gt;手法&lt;/h1&gt;

&lt;h2 id="githubの登録"&gt;Githubの登録&lt;/h2&gt;

&lt;p&gt;gitのリポジトリを作成する際に便利な&lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;に登録しましょう。&lt;/p&gt;

&lt;p&gt;GitHubに登録したら、右上の+マークからNew repositoryを選択しましょう。&lt;/p&gt;

&lt;p&gt;次の画面でリポジトリの名前を登録できます。&lt;/p&gt;

&lt;p&gt;Create Repositoryを押せば、作成完了です。&lt;/p&gt;

&lt;h2 id="アップロード"&gt;アップロード&lt;/h2&gt;

&lt;p&gt;gitのリポジトリを作成するため、以下のコマンドを入力しましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git init 
git remote add origin https://github.com/ユーザ名/リポジトリ名.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;config.rbに対して以下のコードを記述します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;activate :deploy do |deploy|
   deploy.method = :git
   deploy.branch = &amp;#39;master&amp;#39;
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;アップします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;middleman deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="デプロイ"&gt;デプロイ&lt;/h2&gt;

&lt;p&gt;サーバーに入ります。
公開ディレクトリ内に移動して、
中が空であることを確認した後、以下のコマンドを入力すると
ブログを配備することができます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/ユーザ名/リポジトリ名.git .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更新した時は以下のコマンドを入力します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git pull
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>第15回:電子メールシステム</title>
    <link rel="alternate" href="http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/01/16/01.html"/>
    <id>http://ecl.info.kindai.ac.jp/~ikageso/blog/2015/01/16/01.html</id>
    <published>2015-01-15T15:00:00Z</published>
    <updated>2015-11-26T22:49:27+09:00</updated>
    <author>
      <name>ikageso</name>
    </author>
    <content type="html">&lt;h3 id="電子メール"&gt;電子メール&lt;/h3&gt;

&lt;p&gt;RFC822で規定されている。
以下のヘッダフィールドを定義されている。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left"&gt;ヘッダ&lt;/th&gt;
&lt;th style="text-align: left"&gt;意味&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left"&gt;From&lt;/td&gt;
&lt;td style="text-align: left"&gt;送信者アドレス&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left"&gt;To&lt;/td&gt;
&lt;td style="text-align: left"&gt;受信者アドレス&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left"&gt;Date&lt;/td&gt;
&lt;td style="text-align: left"&gt;日時&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left"&gt;Message-id&lt;/td&gt;
&lt;td style="text-align: left"&gt;識別子&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4 id="送信から受信の流れ"&gt;送信から受信の流れ&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;MUA(Mail User Agent)&lt;/li&gt;
&lt;li&gt;MTA(Mail Transfer Agent)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="smtp(simple-mail-transfer-protocol)"&gt;SMTP(Simple Mail Transfer Protocol)&lt;/h4&gt;

&lt;h4 id="pop(post-office-protocol)"&gt;POP(Post Office Protocol)&lt;/h4&gt;

&lt;h3 id="www(world-wide-web)"&gt;WWW(World Wide Web)&lt;/h3&gt;

&lt;p&gt;CERNで開発される。
ブラウザで有名なmozillaは、
Mosaicの開発者がゴジラ好きである事から命名。&lt;/p&gt;

&lt;h4 id="url(uniform-resource-locator)"&gt;URL(Uniform Resource Locator)&lt;/h4&gt;

&lt;p&gt;スキーム サーバ名 ポート名 ドキュメントのパス名&lt;/p&gt;

&lt;h3 id="webドキュメントの形式"&gt;Webドキュメントの形式&lt;/h3&gt;

&lt;p&gt;Webページの多くはHTMLで記述される。
HTMLはMarkup Languageの一種であり、
Markup Languageとは
文字列の属性情報をあらかじめ定義
されたコマンドとして文章中に記述していく方式の言語である。&lt;/p&gt;

&lt;p&gt;以下に簡単なhtmlのソースを示す。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;Homepage&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;span&amp;gt;分散システムです&amp;lt;/span&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="wwwシステムの基本構成"&gt;WWWシステムの基本構成&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;ブラウザからドキュメントの取得要求をする。&lt;/li&gt;
&lt;li&gt;ローカルファイルからドキュメントを取得する。&lt;/li&gt;
&lt;li&gt;応答する。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;この動作をするプロトコルが&lt;strong&gt;HTTP&lt;/strong&gt;である。&lt;/p&gt;

&lt;h4 id="http(hypertext-transfer-protocol)"&gt;HTTP(Hypertext Transfer Protocol)&lt;/h4&gt;

&lt;p&gt;クライアントとサーバの間の通信はHTTPに基づいて実行される。&lt;/p&gt;

&lt;p&gt;当初のWebシステムは静的なドキュメントを表示するのみだった。
しかしながら、今日ではCGI(Common Gateway Interface)
を使用して入力を受理し、検索結果などの
動的なドキュメントを表示するようになっている。&lt;/p&gt;

&lt;p&gt;以下が簡単なCGIの動作手順である。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ブラウザで要求内容をCGIフォームにパラメータ入力する。&lt;/li&gt;
&lt;li&gt;Webサーバが要求内容の解析行う。&lt;/li&gt;
&lt;li&gt;CGIアプリが内容をアプリケーションで処理する。&lt;/li&gt;
&lt;li&gt;Webドキュメントが生成される。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id="wwwにおけるフォールトトレランス、負荷分散"&gt;WWWにおけるフォールトトレランス、負荷分散&lt;/h4&gt;

&lt;p&gt;WWWシステムのフォールトトレランス、負荷分散などは
* クライアント側のキャッシュ
* サーバ側のレプリケーション
により行われている。&lt;/p&gt;

&lt;p&gt;HTTPは直接的に耐故障性や負荷分散性能を
高められるようには構成されていない。&lt;/p&gt;

&lt;p&gt;キャッシュとは過去に使ったデータを記憶しておいて、
更新が無いときにはそのまま流用する機能である。&lt;/p&gt;

&lt;p&gt;WWWのクライアント側のキャッシュとして、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ブラウザでのキャッシュ&lt;/li&gt;
&lt;li&gt;Webプロキシでのキャッシュ
の二種類が存在する。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一貫性プロトコルにより、一貫性を確認。
変更が有るときは再読み込みをしない。
もしくは、一定時間以上古い際読み込みはしない。&lt;/p&gt;

&lt;h3 id="サーバプリケーション"&gt;サーバプリケーション&lt;/h3&gt;

&lt;h3 id="webクラスタ"&gt;Webクラスタ&lt;/h3&gt;

&lt;p&gt;HTTP要求は仮想アドレス(Webスイッチ)に送られ、
Webスイッチが負荷状況を考慮して適当な
Webサーバに転送する。&lt;/p&gt;

&lt;p&gt;例えばラウンドロビンアルゴリズムなどが使用される。&lt;/p&gt;

&lt;p&gt;Webスイッチがボトルネックにならないように注意する必要がある。&lt;/p&gt;

&lt;h3 id="ミラーリング"&gt;ミラーリング&lt;/h3&gt;

&lt;p&gt;速達生を必要しないソフトウェアダウンロードサイトに多い。&lt;/p&gt;

&lt;p&gt;例としてRing Serverが挙げられる。&lt;/p&gt;
</content>
  </entry>
</feed>
